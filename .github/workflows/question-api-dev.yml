name: dev:question-api
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "src/Services/Question/**"
env:
  CONTAINER_APP_LOCATION: southeastasia
  CONTAINER_APP_CONTAINER_NAME: ca-vg-tn-questionapi-dev-sa-001
  CONTAINER_APP_NAME: ca-vg-tn-questionapi-dev-sa-001
  CONTAINER_APP_RESOURCE_GROUP_NAME: rg-vg-tn-dev-sa-001
  CONTAINER_APP_ENV_NAME: cae-vg-tn-dev-sa-001
  CONTIANER_APP_USER_ID: id-ca-vg-tn-dev-sa-001
  CONTAINER_REGISTRY_LOGIN_SERVER: tranchynetworkdev.azurecr.io
  DOCKER_FILE_PATH: src/Services/Question/Question.Api/Dockerfile
  PROJECT_NAME_FOR_DOCKER: tranchyquestionapi

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.tranchynetworkdevRegistry_USERNAME }}
          password: ${{ secrets.tranchynetworkdevRegistry_PASSWORD }}
      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          context: ./src
          push: true
          tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }}
          file: ${{ env.DOCKER_FILE_PATH }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.tranchynetworkdev_SPN }}
      - name: checkout
        uses: actions/checkout@v3
      - name: Deploy to containerapp
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }}
          template: ./deploy/container-app-dapr.bicep
          parameters: location=${{ env.CONTAINER_APP_LOCATION }} userAssignedIdentity=${{ env.CONTIANER_APP_USER_ID }} environmentName=${{ env.CONTAINER_APP_ENV_NAME }} containerAppName=${{ env.CONTAINER_APP_CONTAINER_NAME }} containerImage=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }} containerRegistry=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
          failOnStdErr: false
          deploymentName: dev-question-api-${{ github.sha }}
      - name: logout
        run: >
          az logout
