{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "16959343721915652453"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Specifies the location for resource."
      }
    },
    "containerAppName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the container app."
      }
    },
    "env": {
      "type": "array",
      "defaultValue": []
    },
    "targetPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Specifies the container port."
      }
    },
    "containerImage": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8se/quickstart:latest",
      "metadata": {
        "description": "Specifies the docker container image to deploy."
      }
    },
    "cpuCore": {
      "type": "string",
      "defaultValue": "0.25",
      "allowedValues": [
        "0.25",
        "0.5",
        "0.75",
        "1",
        "1.25",
        "1.5",
        "1.75",
        "2"
      ],
      "metadata": {
        "description": "Number of CPU cores the container can use. Can be with a maximum of two decimals."
      }
    },
    "memorySize": {
      "type": "string",
      "defaultValue": "0.5",
      "allowedValues": [
        "0.5",
        "1",
        "1.5",
        "2",
        "3",
        "3.5",
        "4"
      ],
      "metadata": {
        "description": "Amount of memory (in gibibytes, GiB) allocated to the container up to 4GiB. Can be with a maximum of two decimals. Ratio with CPU cores must be equal to 2."
      }
    },
    "minReplicas": {
      "type": "int",
      "defaultValue": 1,
      "maxValue": 25,
      "minValue": 0,
      "metadata": {
        "description": "Minimum number of replicas that will be deployed"
      }
    },
    "maxReplicas": {
      "type": "int",
      "defaultValue": 3,
      "maxValue": 25,
      "minValue": 0,
      "metadata": {
        "description": "Maximum number of replicas that will be deployed"
      }
    },
    "environmentName": {
      "type": "string"
    },
    "revisionMode": {
      "type": "string",
      "defaultValue": "Single"
    },
    "containerRegistry": {
      "type": "string"
    },
    "subDomainCertificate": {
      "type": "string"
    }
  },
  "variables": {
    "acrPullRole": "[resourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "[format('id-{0}', parameters('containerAppName'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}', parameters('containerAppName'))), variables('acrPullRole'))]",
      "properties": {
        "roleDefinitionId": "[variables('acrPullRole')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}', parameters('containerAppName'))), '2022-01-31-preview').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}', parameters('containerAppName')))]"
      ],
      "metadata": {
        "description": "This allows the managed identity of the container app to access the registry, note scope is applied to the wider ResourceGroup not the ACR"
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-06-01-preview",
      "name": "[parameters('containerAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}', parameters('containerAppName'))))]": {}
        }
      },
      "properties": {
        "environmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "configuration": {
          "activeRevisionsMode": "[parameters('revisionMode')]",
          "registries": [
            {
              "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}', parameters('containerAppName')))]",
              "server": "[parameters('containerRegistry')]"
            }
          ],
          "dapr": {
            "enabled": true,
            "appId": "[parameters('containerAppName')]",
            "appPort": 80,
            "appProtocol": "http",
            "enableApiLogging": true
          },
          "ingress": {
            "external": true,
            "targetPort": "[parameters('targetPort')]",
            "allowInsecure": false,
            "traffic": [
              {
                "latestRevision": true,
                "weight": 100
              }
            ],
            "customDomains": [
              {
                "name": "[reference(resourceId('Microsoft.App/managedEnvironments/managedCertificates', split(parameters('subDomainCertificate'), '/')[0], split(parameters('subDomainCertificate'), '/')[1]), '2023-04-01-preview').subjectName]",
                "bindingType": "SniEnabled",
                "certificateId": "[resourceId('Microsoft.App/managedEnvironments/managedCertificates', split(parameters('subDomainCertificate'), '/')[0], split(parameters('subDomainCertificate'), '/')[1])]"
              }
            ]
          }
        },
        "template": {
          "containers": [
            {
              "name": "[parameters('containerAppName')]",
              "image": "[parameters('containerImage')]",
              "env": "[parameters('env')]",
              "resources": {
                "cpu": "[json(parameters('cpuCore'))]",
                "memory": "[format('{0}Gi', parameters('memorySize'))]"
              }
            }
          ],
          "scale": {
            "minReplicas": "[parameters('minReplicas')]",
            "maxReplicas": "[parameters('maxReplicas')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-{0}', parameters('containerAppName')))]"
      ]
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2022-06-01-preview').configuration.ingress.fqdn]"
    }
  }
}